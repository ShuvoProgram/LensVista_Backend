// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  role         String   @default("user")
  name         String
  email        String   @unique
  password     String
  location     String? // User's location
  phone        String? // Contact phone number
  profileImage String   @default("https://i.ibb.co/JHhYHC6/user.png")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Booking Booking[]
  Review  Review[]
}

model Service {
  id           Int       @id @default(autoincrement())
  title        String
  banner       String
  description  String
  category     String
  price        Float
  availability Boolean
  rating       String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  Booking      Booking[]
  Review       Review[]
}

model Booking {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  service     Service  @relation(fields: [serviceId], references: [id])
  serviceId   Int
  bookingInfo Json
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Review {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  service   Service  @relation(fields: [serviceId], references: [id])
  serviceId Int
  message   String
  rating    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feedback {
   id        Int      @id @default(autoincrement())
   email  String
   message String
    createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model FAQ {
   id        Int      @id @default(autoincrement())
   title  String
   content String
    createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


